---
// src/pages/admin/edit/[id].astro
import type { Event } from '../../../lib/types';
import { supabase } from '../../../lib/supabase';

// Get the event ID from the URL (e.g., /admin/edit/123)
const { id } = Astro.params;

// Fetch the specific event from the database to pre-fill the form
const { data: event, error } = await supabase
  .from('events')
  .select('*')
  .eq('id', id)
  .single();

if (error) {
  console.error("Error fetching event:", error);
  return Astro.redirect('/admin'); // Redirect if event not found
}
---

<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Edit Event | Admin Dashboard</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@picocss/pico@1/css/pico.min.css">
</head>
<body>
  <main class="container">
    <nav>
      <ul>
        <li><strong>Edit Event</strong></li>
      </ul>
      <ul>
        <li><a href="/admin">Back to Dashboard</a></li>
        <li><a href="#" id="logout-button">Logout</a></li>
      </ul>
    </nav>

    <article>
      <form id="edit-event-form">
        <input type="hidden" name="event_id" value={event.id}>
        
        <div class="grid">
          <label for="event_type">
            Event Type
            <select id="event_type" name="event_type" required>
              <option value="Practice" selected={event.event_type === 'Practice'}>Practice</option>
              <option value="Race" selected={event.event_type === 'Race'}>Race</option>
            </select>
          </label>
          <label for="title">
            Title
            <input type="text" id="title" name="title" value={event.title} required>
          </label>
        </div>
        
        <label for="event_date">Date and Time</label>
        <input type="datetime-local" id="event_date" name="event_date" value={new Date(event.event_date).toISOString().slice(0, 16)} required>

        <label for="description">Description</label>
        <textarea id="description" name="description">{event.description}</textarea>

        <button type="submit">Update Event</button>
      </form>
    </article>
  </main>

  <script>
    import { supabase } from '../../../lib/supabase';

    // Basic protection and logout (can be improved with a layout later)
    (async function() {
      const { data: { user } } = await supabase.auth.getUser();
      if (!user) window.location.href = '/login';
    })();
    document.getElementById('logout-button').addEventListener('click', async () => {
      await supabase.auth.signOut();
      window.location.href = '/';
    });

    // Handle the form submission
    const editEventForm = document.getElementById('edit-event-form');
    editEventForm.addEventListener('submit', async (e) => {
      e.preventDefault();
      const formData = new FormData(editEventForm);
      const eventId = formData.get('event_id');
      const updatedEvent = {
        event_type: formData.get('event_type'),
        title: formData.get('title'),
        event_date: formData.get('event_date'),
        description: formData.get('description'),
      };

      const { error } = await supabase
        .from('events')
        .update(updatedEvent)
        .eq('id', eventId);

      if (error) {
        alert('Error updating event: ' + error.message);
      } else {
        alert('Event updated successfully!');
        window.location.href = '/admin'; // Redirect back to the dashboard
      }
    });
  </script>
</body>
</html>
