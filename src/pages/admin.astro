---
// src/pages/admin.astro
// Server-side data fetching removed to fix the empty table issue.
---

<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Admin Dashboard | Running Club</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@picocss/pico@1/css/pico.min.css">
</head>
<body>
  <main class="container">
    <nav>
      <ul>
        <li><strong>Admin Dashboard</strong></li>
      </ul>
      <ul>
        <li><a href="/schedule">View Schedule</a></li>
        <li><a href="#" id="logout-button">Logout</a></li>
      </ul>
    </nav>

    <h1>Manage Events</h1>

    <article>
      <h2>Add New Event</h2>
      <form id="add-event-form">
        <div class="grid">
          <label for="event_type">
            Event Type
            <select id="event_type" name="event_type" required>
              <option value="Practice">Practice</option>
              <option value="Race">Race</option>
            </select>
          </label>
          <label for="title">
            Title
            <input type="text" id="title" name="title" placeholder="e.g., Track Workout" required>
          </label>
        </div>
        
        <label for="event_date">Date and Time</label>
        <input type="datetime-local" id="event_date" name="event_date" required>

        <label for="description">Description</label>
        <textarea id="description" name="description" placeholder="e.g., Meet at the south entrance of the track."></textarea>

        <button type="submit">Add Event</button>
      </form>
    </article>

    <article>
      <h2>Existing Events</h2>
      <table id="events-table">
        <thead>
          <tr>
            <th>Type</th>
            <th>Title</th>
            <th>Date</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody id="events-tbody">
          <!-- Events will be loaded here by the script -->
          <tr><td colspan="4" aria-busy="true">Loading events...</td></tr>
        </tbody>
      </table>
    </article>
  </main>

  <script>
    import { supabase } from '../lib/supabase';
    import type { Event } from '../lib/types';

    const eventsTbody = document.getElementById('events-tbody');

    // --- 1. Fetch and Display Events ---
    async function fetchAndDisplayEvents() {
      const { data: events, error } = await supabase
        .from('events')
        .select('*')
        .order('event_date', { ascending: true });

      if (error) {
        console.error("Error fetching events:", error);
        eventsTbody.innerHTML = '<tr><td colspan="4">Error loading events.</td></tr>';
        return;
      }

      if (events.length === 0) {
        eventsTbody.innerHTML = '<tr><td colspan="4">No events found. Add one above!</td></tr>';
        return;
      }

      eventsTbody.innerHTML = events.map((event) => `
        <tr data-event-id="${event.id}">
          <td>${event.event_type}</td>
          <td>${event.title}</td>
          <td>${new Date(event.event_date).toLocaleString()}</td>
          <td style="text-align: center; white-space: nowrap;">
            <a href="/admin/edit/${event.id}" title="Edit" class="contrast" style="text-decoration: none; margin-right: 1rem;">‚úèÔ∏è</a>
            <a href="#" title="Delete" data-action="delete" class="contrast" style="text-decoration: none; color: var(--pico-color-red-500);">üóëÔ∏è</a>
          </td>
        </tr>
      `).join('');
    }

    // --- 2. Page Protection and Data Loading ---
    async function checkAdminStatusAndLoadData() {
      const { data: { user } } = await supabase.auth.getUser();
      
      if (!user) {
        window.location.href = '/login';
        return;
      }

      const { data: profile, error } = await supabase
        .from('profiles')
        .select('is_admin')
        .eq('id', user.id)
        .single();

      if (error || !profile || !profile.is_admin) {
        console.error('Admin access denied.');
        window.location.href = '/';
        return;
      }
      
      // If the user is a confirmed admin, load the events
      fetchAndDisplayEvents();
    }
    checkAdminStatusAndLoadData();

    // --- 3. Handle Logout ---
    document.getElementById('logout-button').addEventListener('click', async () => {
      await supabase.auth.signOut();
      window.location.href = '/';
    });

    // --- 4. Handle Add Event Form ---
    document.getElementById('add-event-form').addEventListener('submit', async (event) => {
      event.preventDefault();
      const form = event.currentTarget as HTMLFormElement;
      const formData = new FormData(form);
      const newEvent = {
        event_type: formData.get('event_type'),
        title: formData.get('title'),
        event_date: formData.get('event_date'),
        description: formData.get('description'),
      };

      const { error } = await supabase.from('events').insert([newEvent]);

      if (error) {
        alert('Error adding event: ' + error.message);
      } else {
        alert('Event added successfully!');
        location.reload();
      }
    });

    // --- 5. Handle Delete Buttons ---
    eventsTbody.addEventListener('click', async (event) => {
      const target = event.target as HTMLElement;
      if (target.dataset.action === 'delete') {
        event.preventDefault(); // Prevent the link from navigating
        const row = target.closest('tr');
        const eventId = row.dataset.eventId;

        if (confirm('Are you sure you want to delete this event?')) {
          const { error } = await supabase.from('events').delete().eq('id', eventId);
          if (error) {
            alert('Error deleting event: ' + error.message);
          } else {
            row.remove();
          }
        }
      }
    });
  </script>
</body>
</html>