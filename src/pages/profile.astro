---
// src/pages/profile.astro
import { supabase } from '../lib/supabase-client';

const { data: settings } = await supabase.from('site_settings').select('value').eq('key', 'site_title').single();
const siteTitle = settings?.value || "Running Club";

const supabaseUrl = import.meta.env.PUBLIC_SUPABASE_URL;
const supabaseAnonKey = import.meta.env.PUBLIC_SUPABASE_ANON_KEY;
---

<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>My Profile | {siteTitle}</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@picocss/pico@1/css/pico.min.css">
</head>
<body data-supabase-url={supabaseUrl} data-supabase-anon-key={supabaseAnonKey}>
  <main class="container">
    <nav>
      <ul>
        <li><strong>My Profile</strong></li>
      </ul>
      <ul>
        <li><a href="/schedule">View Schedule</a></li>
        <li><a href="#" id="logout-button">Logout</a></li>
      </ul>
    </nav>

    <h1>Update Your Information</h1>

    <article id="profile-form-container">
      <p aria-busy="true">Loading your profile...</p>
    </article>
  </main>

  <script>
    import { createClient } from '@supabase/supabase-js';

    const body = document.querySelector('body');
    const supabaseUrl = body.dataset.supabaseUrl;
    const supabaseAnonKey = body.dataset.supabaseAnonKey;

    if (!supabaseUrl || !supabaseAnonKey) {
      console.error("Supabase credentials not found in the DOM.");
    } else {
      const supabase = createClient(supabaseUrl, supabaseAnonKey);
      const formContainer = document.getElementById('profile-form-container');
      let user = null;

      // --- 1. Fetch Profile Data and Display Form ---
      async function fetchAndDisplayForm() {
        const { data: { user: authUser } } = await supabase.auth.getUser();
        if (!authUser) {
          window.location.href = '/login';
          return;
        }
        user = authUser;

        const { data: profile, error } = await supabase
          .from('profiles')
          .select('full_name, grade')
          .eq('id', user.id)
          .single();

        if (error || !profile) {
          console.error("Error fetching profile:", error);
          formContainer.innerHTML = '<p>Could not load your profile data.</p>';
          return;
        }

        formContainer.innerHTML = `
          <form id="profile-form">
            <label for="email">Email (read-only)</label>
            <input type="email" id="email" name="email" value="${user.email}" readonly>

            <label for="full_name">Full Name</label>
            <input type="text" id="full_name" name="full_name" value="${profile.full_name || ''}" required>
            
            <label for="grade">Grade</label>
            <input type="number" id="grade" name="grade" value="${profile.grade || ''}" required>
            
            <button type="submit">Update Profile</button>
          </form>
        `;

        document.getElementById('profile-form').addEventListener('submit', handleUpdate);
      }

      // --- 2. Handle Form Submission ---
      async function handleUpdate(event) {
        event.preventDefault();
        const form = event.currentTarget;
        const formData = new FormData(form);
        
        const updatedData = {
          full_name: formData.get('full_name'),
          grade: formData.get('grade'),
        };

        const { error } = await supabase
          .from('profiles')
          .update(updatedData)
          .eq('id', user.id);

        if (error) {
          alert('Error updating profile: ' + error.message);
        } else {
          alert('Profile updated successfully!');
        }
      }

      fetchAndDisplayForm();

      // --- 3. Handle Logout ---
      document.getElementById('logout-button').addEventListener('click', async () => {
        await supabase.auth.signOut();
        window.location.href = '/';
      });
    }
  </script>
</body>
</html>
