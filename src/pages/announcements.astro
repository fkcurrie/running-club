---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Announcements">
  <h1>Latest News</h1>

  <div id="announcements-list">
    <p aria-busy="true">Loading announcements...</p>
  </div>
  <div id="pagination-controls" style="text-align: center; margin-top: 2rem;"></div>
</Layout>

<script type="module">
  import { createClient } from '@supabase/supabase-js';
  import { marked } from 'marked';

  const body = document.querySelector('body');
  const supabaseUrl = body.dataset.supabaseUrl;
  const supabaseAnonKey = body.dataset.supabaseAnonKey;

  if (!supabaseUrl || !supabaseAnonKey) {
    console.error("Supabase credentials not found in the DOM.");
  } else {
    const supabase = createClient(supabaseUrl, supabaseAnonKey);
    const announcementsList = document.getElementById('announcements-list');
    const paginationControls = document.getElementById('pagination-controls');
    const itemsPerPage = 5;
    let currentPage = 1;

    // --- 1. Fetch and Display Announcements ---
    async function fetchAndDisplayAnnouncements(page = 1) {
      const { data, error, count } = await supabase
        .from('announcements')
        .select('*', { count: 'exact' })
        .order('created_at', { ascending: false })
        .range((page - 1) * itemsPerPage, page * itemsPerPage - 1);

      if (error) {
        console.error("Error fetching announcements:", error);
        announcementsList.innerHTML = '<p>Could not load announcements.</p>';
        return;
      }

      if (data.length === 0) {
        announcementsList.innerHTML = '<p>No announcements have been posted yet.</p>';
        return;
      }

      announcementsList.innerHTML = data.map(item => `
        <article>
          <header>
            <strong>${item.title}</strong><br>
            <small>Posted on ${new Date(item.created_at).toLocaleDateString()}</small>
          </header>
          <div>${marked.parse(item.content)}</div>
        </article>
      `).join('');

      renderPagination(count, page);
    }

    // --- Render Pagination ---
    function renderPagination(totalItems, page) {
      const totalPages = Math.ceil(totalItems / itemsPerPage);
      if (totalPages <= 1) {
        paginationControls.innerHTML = '';
        return;
      }

      let paginationHTML = '';
      for (let i = 1; i <= totalPages; i++) {
        paginationHTML += `<a href="#" data-page="${i}" class="${i === page ? 'secondary' : ''}" style="margin: 0 0.5rem;">${i}</a>`;
      }
      paginationControls.innerHTML = paginationHTML;
    }

    paginationControls.addEventListener('click', (event) => {
      if (event.target.tagName === 'A') {
        event.preventDefault();
        const page = parseInt(event.target.dataset.page, 10);
        if (page !== currentPage) {
          currentPage = page;
          fetchAndDisplayAnnouncements(currentPage);
        }
      }
    });

    // --- 2. Page Protection and Data Loading ---
    async function checkLoginAndLoad() {
      const { data: { user } } = await supabase.auth.getUser();
      if (!user) {
        window.location.href = '/login';
        return;
      }
      fetchAndDisplayAnnouncements(currentPage);
    }

    checkLoginAndLoad();
  }
</script>