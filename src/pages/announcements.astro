---
// src/pages/announcements.astro
import { supabase } from '../lib/supabase-client';

const { data: settings } = await supabase.from('site_settings').select('value').eq('key', 'site_title').single();
const siteTitle = settings?.value || "Running Club";

const supabaseUrl = import.meta.env.PUBLIC_SUPABASE_URL;
const supabaseAnonKey = import.meta.env.PUBLIC_SUPABASE_ANON_KEY;
---

<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Announcements | {siteTitle}</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@picocss/pico@1/css/pico.min.css">
</head>
<body data-supabase-url={supabaseUrl} data-supabase-anon-key={supabaseAnonKey}>
  <main class="container">
    <nav>
      <ul>
        <li><strong>Club Announcements</strong></li>
      </ul>
      <ul>
        <li><a href="/schedule">View Schedule</a></li>
        <li><a href="/profile">My Profile</a></li>
        <li><a href="#" id="logout-button">Logout</a></li>
      </ul>
    </nav>

    <h1>Latest News</h1>

    <div id="announcements-list">
      <p aria-busy="true">Loading announcements...</p>
    </div>
  </main>

  <script>
    import { createClient } from '@supabase/supabase-js';

    const body = document.querySelector('body');
    const supabaseUrl = body.dataset.supabaseUrl;
    const supabaseAnonKey = body.dataset.supabaseAnonKey;

    if (!supabaseUrl || !supabaseAnonKey) {
      console.error("Supabase credentials not found in the DOM.");
    } else {
      const supabase = createClient(supabaseUrl, supabaseAnonKey);
      const announcementsList = document.getElementById('announcements-list');

      // --- 1. Fetch and Display Announcements ---
      async function fetchAndDisplayAnnouncements() {
        const { data: announcements, error } = await supabase
          .from('announcements')
          .select('*')
          .order('created_at', { ascending: false });

        if (error) {
          console.error("Error fetching announcements:", error);
          announcementsList.innerHTML = '<p>Could not load announcements.</p>';
          return;
        }

        if (announcements.length === 0) {
          announcementsList.innerHTML = '<p>No announcements have been posted yet.</p>';
          return;
        }

        announcementsList.innerHTML = announcements.map(item => `
          <article>
            <header>
              <strong>${item.title}</strong><br>
              <small>Posted on ${new Date(item.created_at).toLocaleDateString()}</small>
            </header>
            <p>${item.content}</p>
          </article>
        `).join('');
      }

      // --- 2. Page Protection and Data Loading ---
      async function checkLoginAndLoad() {
        const { data: { user } } = await supabase.auth.getUser();
        if (!user) {
          window.location.href = '/login';
          return;
        }
        fetchAndDisplayAnnouncements();
      }

      checkLoginAndLoad();

      // --- 3. Handle Logout ---
      document.getElementById('logout-button').addEventListener('click', async () => {
        await supabase.auth.signOut();
        window.location.href = '/';
      });
    }
  </script>
</body>
</html>
