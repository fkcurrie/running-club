---
// src/pages/forgot-password.astro
const supabaseUrl = import.meta.env.PUBLIC_SUPABASE_URL;
const supabaseAnonKey = import.meta.env.PUBLIC_SUPABASE_ANON_KEY;
---

<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Forgot Password | Running Club</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@picocss/pico@1/css/pico.min.css">
</head>
<body data-supabase-url={supabaseUrl} data-supabase-anon-key={supabaseAnonKey}>
  <main class="container" style="max-width: 600px; margin-top: 5rem;">
    <article>
      <h1 style="text-align: center;">Reset Your Password</h1>
      <p>Enter your email address below, and we'll send you a link to reset your password.</p>
      <form id="reset-form">
        <label for="email">School Email</label>
        <input type="email" id="email" name="email" placeholder="your.name@school.ca" required>
        
        <button type="submit" class="primary">Send Reset Link</button>
      </form>
      <p id="message-area" style="text-align: center;"></p>
      <p style="text-align: center;">Remembered your password? <a href="/login">Log In</a></p>
    </article>
  </main>

  <script>
    import { createClient } from '@supabase/supabase-js';

    const body = document.querySelector('body');
    const supabaseUrl = body.dataset.supabaseUrl;
    const supabaseAnonKey = body.dataset.supabaseAnonKey;

    if (!supabaseUrl || !supabaseAnonKey) {
      console.error("Supabase credentials not found in the DOM.");
    } else {
      const supabase = createClient(supabaseUrl, supabaseAnonKey);
      const form = document.getElementById('reset-form');
      const messageArea = document.getElementById('message-area');

      form.addEventListener('submit', async (event) => {
        event.preventDefault();
        const formData = new FormData(form);
        const email = formData.get('email');

        // This will send a password reset email to the user.
        // The user will be redirected to the URL specified in your Supabase project settings.
        // Make sure to set this to your live site URL + '/reset-password'.
        const { error } = await supabase.auth.resetPasswordForEmail(email, {
          redirectTo: `${window.location.origin}/reset-password`,
        });

        if (error) {
          messageArea.textContent = `Error: ${error.message}`;
          messageArea.style.color = 'var(--pico-color-red-500)';
        } else {
          messageArea.textContent = 'Success! If an account exists for that email, a reset link has been sent.';
          messageArea.style.color = 'var(--pico-color-green-500)';
          form.reset();
        }
      });
    }
  </script>
</body>
</html>
